//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DatabaseModel", "RimeWordRelation", "Rime", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RimSpelet.Rime), "Word", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RimSpelet.Word), true)]

#endregion

namespace RimSpelet
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DatabaseEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DatabaseEntities object using the connection string found in the 'DatabaseEntities' section of the application configuration file.
        /// </summary>
        public DatabaseEntities() : base("name=DatabaseEntities", "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabaseEntities object.
        /// </summary>
        public DatabaseEntities(string connectionString) : base(connectionString, "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabaseEntities object.
        /// </summary>
        public DatabaseEntities(EntityConnection connection) : base(connection, "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rime> Rime
        {
            get
            {
                if ((_Rime == null))
                {
                    _Rime = base.CreateObjectSet<Rime>("Rime");
                }
                return _Rime;
            }
        }
        private ObjectSet<Rime> _Rime;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Word> Word
        {
            get
            {
                if ((_Word == null))
                {
                    _Word = base.CreateObjectSet<Word>("Word");
                }
                return _Word;
            }
        }
        private ObjectSet<Word> _Word;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rime EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRime(Rime rime)
        {
            base.AddObject("Rime", rime);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Word EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWord(Word word)
        {
            base.AddObject("Word", word);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="Rime")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rime : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rime object.
        /// </summary>
        /// <param name="rimeID">Initial value of the RimeID property.</param>
        public static Rime CreateRime(global::System.Int64 rimeID)
        {
            Rime rime = new Rime();
            rime.RimeID = rimeID;
            return rime;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RimeID
        {
            get
            {
                return _RimeID;
            }
            set
            {
                if (_RimeID != value)
                {
                    OnRimeIDChanging(value);
                    ReportPropertyChanging("RimeID");
                    _RimeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RimeID");
                    OnRimeIDChanged();
                }
            }
        }
        private global::System.Int64 _RimeID;
        partial void OnRimeIDChanging(global::System.Int64 value);
        partial void OnRimeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RimeWord
        {
            get
            {
                return _RimeWord;
            }
            set
            {
                OnRimeWordChanging(value);
                ReportPropertyChanging("RimeWord");
                _RimeWord = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RimeWord");
                OnRimeWordChanged();
            }
        }
        private global::System.String _RimeWord;
        partial void OnRimeWordChanging(global::System.String value);
        partial void OnRimeWordChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "RimeWordRelation", "Word")]
        public EntityCollection<Word> Word
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Word>("DatabaseModel.RimeWordRelation", "Word");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Word>("DatabaseModel.RimeWordRelation", "Word", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="Word")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Word : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Word object.
        /// </summary>
        /// <param name="wordID">Initial value of the WordID property.</param>
        public static Word CreateWord(global::System.Int64 wordID)
        {
            Word word = new Word();
            word.WordID = wordID;
            return word;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WordID
        {
            get
            {
                return _WordID;
            }
            set
            {
                if (_WordID != value)
                {
                    OnWordIDChanging(value);
                    ReportPropertyChanging("WordID");
                    _WordID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WordID");
                    OnWordIDChanged();
                }
            }
        }
        private global::System.Int64 _WordID;
        partial void OnWordIDChanging(global::System.Int64 value);
        partial void OnWordIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WordString
        {
            get
            {
                return _WordString;
            }
            set
            {
                OnWordStringChanging(value);
                ReportPropertyChanging("WordString");
                _WordString = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WordString");
                OnWordStringChanged();
            }
        }
        private global::System.String _WordString;
        partial void OnWordStringChanging(global::System.String value);
        partial void OnWordStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Picture
        {
            get
            {
                return StructuralObject.GetValidValue(_Picture);
            }
            set
            {
                OnPictureChanging(value);
                ReportPropertyChanging("Picture");
                _Picture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Picture");
                OnPictureChanged();
            }
        }
        private global::System.Byte[] _Picture;
        partial void OnPictureChanging(global::System.Byte[] value);
        partial void OnPictureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> RimeID
        {
            get
            {
                return _RimeID;
            }
            set
            {
                OnRimeIDChanging(value);
                ReportPropertyChanging("RimeID");
                _RimeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RimeID");
                OnRimeIDChanged();
            }
        }
        private Nullable<global::System.Int64> _RimeID;
        partial void OnRimeIDChanging(Nullable<global::System.Int64> value);
        partial void OnRimeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "RimeWordRelation", "Rime")]
        public Rime Rime
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rime>("DatabaseModel.RimeWordRelation", "Rime").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rime>("DatabaseModel.RimeWordRelation", "Rime").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Rime> RimeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rime>("DatabaseModel.RimeWordRelation", "Rime");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Rime>("DatabaseModel.RimeWordRelation", "Rime", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
